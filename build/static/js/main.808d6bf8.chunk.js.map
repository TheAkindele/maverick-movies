{"version":3,"sources":["redux/actions/moviesAction.js","components/search-folder/SearchStyles.js","components/search-folder/SearchBox.js","utility-folder/utility.js","components/preview-folder/Preview-style.js","components/preview-folder/MoviesPreview.js","components/home-Folder/HomeStyle.js","components/home-Folder/Home.js","components/nav-Folder/NavbarStyle.js","components/nav-Folder/NavBar.js","components/footer-folder/footerStyle.js","components/footer-folder/Footer.js","components/category-folder/CategoryStyle.js","components/category-folder/CategoryPage.js","components/movie-folder/moviePageStyle.js","components/movie-folder/MovieTrailer.js","components/loader-file/loaderStyle.js","components/loader-file/Loader.js","components/movie-folder/MoviePage.js","components/search-folder/SearchResult.js","App.js","redux/reducers/moviesReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["api_key","getSelectedMovie","movieId","dispatch","axios","then","res","type","payload","data","catch","err","console","log","vid","results","error","FormStyle","styled","div","ResultStyle","SearchBox","state","movieSearch","handleChange","e","setState","target","value","handleSubmit","props","history","match","preventDefault","getSearchedMovie","push","url","className","onSubmit","this","id","onChange","htmlFor","Component","connect","sarchInput","result","withRouter","stateObjectToArray","thestate","Object","keys","map","key","selectCategory","element","theProps","find","item","routeName","PreviewBoxStyle","PreviewStyle","PreviewCategory","allMoviesReducer","allMoviesArr","ID","category","content","slice","poster_path","title","release_date","to","src","alt","length","HomeStyle","Home","NavWrap","LogoStyle","Link","NavBar","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","edge","href","data-target","FooterStyle","Footer","CategoryStyle","ownProps","params","categoryMovies","onClick","MoviepageStyle","MovieDetailsStyle","MovieTrailerStyle","ExtraDetails","Trailer","MovieTrailer","movieVideo","style","position","paddingBottom","paddingTop","height","width","name","top","left","frameBorder","PreLoaderStyle","PreLoader","theArray","getMovie","clickedMovies","movie","video","budget","original_language","overview","runtime","status","tagline","revenue","vote_average","searchedMovie","App","getMovies","exact","path","component","SearchResult","CategoryPage","MoviePage","response","initState","popular_movies","top_rated_movies","upcoming_movies","movieState","rootReducer","combineReducers","action","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.808d6bf8.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const GET_POPULAR = 'GET_POPULAR'\r\nexport const GET_TOP_RATED = 'GET_TOP_RATED'\r\nexport const GET_UPCOMING = 'GET_UPCOMING'\r\nexport const GET_SELECTED_MOVIE = 'GET_SELECTED_MOVIE'\r\nexport const GET_VIDEO = 'GET_VIDEO'\r\nexport const GET_SEARCHED_MOVIE = 'GET_SEARCHED_MOVIE'\r\n\r\nconst api_key = '37ad0cf97af435a0a03c6e3da5f19502'\r\n\r\nexport const getMovies = () => dispatch => {\r\n    /// for popular\r\n    axios(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log('axios popular= ', response.data.results)\r\n            dispatch({\r\n                type: GET_POPULAR,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n\r\n    /// for toprated\r\n    axios(`https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log('axios topRated= ', response.data.results)\r\n            dispatch({\r\n                type: GET_TOP_RATED,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n\r\n    // for upcoming\r\n    axios(`https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log(' axios upcoming= ', response.data.results)\r\n            dispatch({\r\n                type: GET_UPCOMING,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n}\r\n\r\nexport const getSelectedMovie = (movieId) => dispatch => {\r\n    axios(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}&language=en-US`)\r\n        .then(res => {\r\n            //console.log('the movie= ', res.data)\r\n            dispatch({\r\n                type: GET_SELECTED_MOVIE,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log('Error ', err))\r\n\r\n    axios(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${api_key}&language=en-US`)\r\n        .then(vid => {\r\n            //console.log('vid details ', vid.data.results)\r\n            dispatch({\r\n                type: GET_VIDEO,\r\n                payload: vid.data.results\r\n            })\r\n        })\r\n        .catch(error => console.log('Error encountered ', error))\r\n}\r\n\r\nexport const getSearchedMovie = sarchInput => dispatch => {\r\n    axios(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${sarchInput}`)\r\n        .then(result => {\r\n            //console.log('searched result= ', result.data.results)\r\n            dispatch({\r\n                type: GET_SEARCHED_MOVIE,\r\n                payload: result.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error in seraching ', err))\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const FormStyle = styled.div`\r\n    width: 100%;\r\n    padding: 3vw 0;\r\n`\r\n\r\nexport const ResultStyle = styled.div`\r\n    width: 100%;\r\n    min-height: 90vh;\r\n    background: lightsteelblue;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n\r\n    h4{\r\n        text-align: center;\r\n        @media (max-width: 760px) {\r\n            font-size: 1.3rem;\r\n            font-weight: 200;\r\n        }\r\n    }\r\n\r\n    .result{\r\n        width: 90%;\r\n        margin: 1vw auto;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        height: 30vh;\r\n        border: 1px solid white;\r\n        @media (max-width: 768px) {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n            height: auto;\r\n        }\r\n\r\n        .image{\r\n            width: 30%;\r\n            height: 100%;\r\n            @media (max-width: 768px) {\r\n                align-self: center;\r\n                width: 100%;\r\n                max-height: 30%;\r\n            }\r\n\r\n            .photo{\r\n                height: 100%;\r\n                width: 100%;\r\n            }\r\n        }\r\n        .content{\r\n            width: 68%;\r\n            height: 100%;\r\n            padding-left: 20px;\r\n            @media (max-width: 768px) {\r\n                width: 100%;\r\n                font-size: small;\r\n                font-weight: lighter;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SearchLink = styled.div`\r\n    width: 100%;\r\n`","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getSearchedMovie } from '../../redux/actions/moviesAction'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { FormStyle } from './SearchStyles'\r\n\r\nclass SearchBox extends Component {\r\n    state = {\r\n        movieSearch: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            movieSearch: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { movieSearch } = this.state\r\n        const { history, match } = this.props\r\n        e.preventDefault()\r\n        this.props.getSearchedMovie(movieSearch)\r\n        //console.log('search= ', movieSearch)\r\n        history.push(`${match.url}search/${movieSearch}`)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormStyle>\r\n                <div className='container search-box'>\r\n                    <div className=\"row\">\r\n                        <form className='input-field col s12' onSubmit={this.handleSubmit}>\r\n                            <input id=\"first_name\" type=\"text\" className=\"validate white-text \" onChange={this.handleChange} />\r\n                            <label htmlFor=\"first_name\">Search Movie here...</label>\r\n                            <button className='btn col s12'>Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </FormStyle>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { getSearchedMovie })(withRouter(SearchBox))\r\n","\r\nexport const stateObjectToArray = (thestate) => {\r\n    return Object.keys(thestate).map(key => thestate[key])\r\n}\r\n\r\nexport const selectCategory = ((element, theProps) => {\r\n    if (element) {\r\n        return element.find(item => item.routeName === theProps)\r\n    }\r\n    else {\r\n        return console.log('element is empty')\r\n    }\r\n})\r\n\r\nexport const getFirstItem = (theArray) => {\r\n    if (theArray) {\r\n        return theArray.find(item => item.type === 'Trailer')\r\n    }\r\n    else return 'No video Found'\r\n}\r\n\r\nexport const waitItemId = array => {\r\n\r\n}\r\n\r\nexport const checkArrayId = array => {\r\n    return array.map(item => console.log('item Ids ', item.ID))\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const PreviewBoxStyle = styled.div`\r\n    width: 90%;\r\n    min-height: 80vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n`\r\n\r\nexport const PreviewStyle = styled.div`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .previews{\r\n        width: 100%;\r\n\r\n        .row{\r\n            width: 100%;\r\n            \r\n            .col{\r\n                \r\n\r\n                .card{\r\n                    border: 5px solid grey;\r\n                    \r\n                    .card-action{\r\n                        \r\n                        .title{\r\n                            @media (max-width: 480px) {\r\n                        font-size: smaller;\r\n                        font-weight: 200;\r\n                            }\r\n                        }\r\n                        .date{\r\n                            @media (max-width: 480px) {\r\n                        font-size: smaller;\r\n                        font-weight: 100;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const PreviewCategory = styled.div`\r\n    height: 10%;\r\n    font-size: 1.9rem;\r\n    font-weight: 500;\r\n    padding: 2vw 0;\r\n    color: white;\r\n    @media (max-width: 760px) {\r\n        font-size: 1.4rem;\r\n        font-weight: 200;\r\n    }\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { stateObjectToArray } from '../../utility-folder/utility'\r\nimport { PreviewBoxStyle, PreviewStyle, PreviewCategory } from './Preview-style'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MoviesPreview = ({ allMoviesArr }) => {\r\n    //console.log('movies ', allMoviesArr)\r\n\r\n    return (\r\n        <PreviewBoxStyle>\r\n            {\r\n                allMoviesArr && allMoviesArr.map(({ ID, routeName, category, content }) => (\r\n                    <PreviewStyle key={ID}>\r\n\r\n                        <div className=\"container previews\">\r\n                            <PreviewCategory >\r\n                                {category}\r\n                            </PreviewCategory>\r\n                            <div className=\"row\" >\r\n                                {\r\n                                    content && content.slice(0, 4).map(({ id, poster_path, title, release_date }) => (\r\n                                        <div className=\"col s10 l3 offset-s1\">\r\n                                            <div className=\"card\" key={id}>\r\n                                                <div className=\"card-image\">\r\n                                                    <Link to={`/${routeName}`}>\r\n                                                        <img src={`https://image.tmdb.org/t/p/w154${poster_path}`} alt=\"poster\" />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"card-action\">\r\n                                                    <h6 className=\"title red-text text-accent-4\">\r\n                                                        {title.length >= 18 ? (title.slice(0, 18) + '...') : title}\r\n                                                    </h6>\r\n                                                    <p className=\"date\">{release_date}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </PreviewStyle>\r\n\r\n                ))\r\n            }\r\n\r\n        </PreviewBoxStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ allMoviesReducer }) => {\r\n    //console.log('movies= ', allMoviesReducer)\r\n\r\n    return {\r\n        allMoviesArr: stateObjectToArray(allMoviesReducer)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviesPreview)\r\n","import styled from 'styled-components'\r\n\r\nexport const HomeStyle = styled.div`\r\n    background: midnightblue;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n`","import React from 'react'\r\nimport SearchBox from '../search-folder/SearchBox'\r\nimport MoviesPreview from '../preview-folder/MoviesPreview'\r\nimport { HomeStyle } from './HomeStyle'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomeStyle>\r\n            <SearchBox />\r\n            <MoviesPreview />\r\n        </HomeStyle>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NavWrap = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nexport const LogoStyle = styled(Link)`\r\n    @media (max-width: 760px) {\r\n        font-size: small;\r\n    }\r\n`\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { NavWrap } from './NavbarStyle'\r\nimport M from 'materialize-css'\r\nimport { LogoStyle } from './NavbarStyle'\r\n\r\nclass NavBar extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            const elems = document.querySelectorAll('.sidenav');\r\n            M.Sidenav.init(elems, { edge: 'right' });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavWrap>\r\n                <nav className='pink accent-2'>\r\n                    <div className=\"nav-wrapper\">\r\n                        <div className=\"container\">\r\n                            <div className=\"brand-logo left\">\r\n                                <LogoStyle to='/'>\r\n                                    maverick<span className='deep-purple-text text-darken-4 flow-text'>MOVIES</span>\r\n                                </LogoStyle>\r\n                            </div>\r\n                            <a href=\"#1\" data-target=\"slide-out\" className=\"sidenav-trigger right\"><i className=\"material-icons\">menu</i></a>\r\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                                <li><Link to='/popular_movies' className='content'>Popular</Link></li>\r\n                                <li><Link to='/top_rated_movies' className='content'>Top-Rated</Link></li>\r\n                                <li><Link to='/upcoming_movies' className='content'>Upcoming</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                <ul id=\"slide-out\" className=\"sidenav\">\r\n                    <li><Link to='/popular_movies' className='content'>Popular</Link></li>\r\n                    <li><Link to='/top_rated_movies' className='content'>Top-Rated</Link></li>\r\n                    <li><Link to='/upcoming_movies' className='content'>Upcoming</Link></li>\r\n                </ul>\r\n            </NavWrap>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const FooterStyle = styled.div`\r\n    width: 100%;\r\n    background: #ff4081;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    padding: 2vw 0 1vw 0;\r\n\r\n    .socials{\r\n        width: 30%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        @media (max-width: 760px) {\r\n            width: 70%;\r\n            justify-content: space-around;\r\n        }\r\n\r\n        a{\r\n            font-size: 1.9rem;\r\n            color: white;\r\n            @media (max-width: 768px) {\r\n                font-weight: small;\r\n            }\r\n        }\r\n    }\r\n    .powered{\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        padding: 0 10px;\r\n        color: black;\r\n        @media (max-width: 760px) {\r\n                padding: 0 1px;\r\n                font-size: smaller;\r\n            }\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { FaInstagram, FaTwitter, FaLinkedin } from 'react-icons/fa'\r\nimport { FooterStyle } from './footerStyle'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterStyle>\r\n            <div className=\"container socials\">\r\n                <a href=\"https://github.com/TheAkindele\"><FaInstagram /></a>\r\n                <a href=\"https://twitter.com/MaverickHats\"><FaTwitter /></a>\r\n                <a href=\"https://www.linkedin.com/in/muhyideen-akindele-325722150/\"> <FaLinkedin /> </a>\r\n            </div>\r\n            <div className=\"powered \">\r\n                <a href=\"https://www.themoviedb.org/?language=en-US\">\r\n                    <p className='black-text'>powered by <span className=\"flow-text blue-text\">TMDB</span></p>\r\n                </a>\r\n            </div>\r\n        </FooterStyle>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import styled from 'styled-components'\r\n\r\nexport const CategoryStyle = styled.div`\r\n    width: 100%;\r\n    background: rgb(187, 234, 248);\r\n\r\n    .category-name{\r\n        padding: 15px 0;\r\n        text-align: center;\r\n        font-size: 2.8rem;\r\n        font-weight: 600;\r\n        @media (max-width: 768px) {\r\n            font-size: 1.9rem;\r\n            font-weight: 300;\r\n            padding: 10px 0;\r\n        }\r\n    }\r\n\r\n    .category-grid{\r\n        width: 90%;\r\n        @media (max-width: 760px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { stateObjectToArray, selectCategory } from '../../utility-folder/utility'\r\nimport { getSelectedMovie } from '../../redux/actions/moviesAction'\r\nimport { CategoryStyle } from './CategoryStyle'\r\n\r\nconst Collections = ({ categoryMovies, getSelectedMovie }) => {\r\n    const { category, content } = categoryMovies\r\n\r\n    return (\r\n        <CategoryStyle>\r\n            <div className=\"category-name\">\r\n                {category}\r\n            </div>\r\n            <div className=\"container category-grid\">\r\n                <div className=\"row\">\r\n                    {\r\n                        content.map(({ id, poster_path, title, release_date }) => (\r\n                            <div className=\"col s10 l3 offset-s1\">\r\n                                <div className=\"card\" key={id} onClick={() => getSelectedMovie(id)}>\r\n                                    <Link to={`/movie/${id}/${title}`} className='link'>\r\n                                        <div className=\"card-image\">\r\n                                            <img src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt=\"poster\" />\r\n                                        </div>\r\n                                        <div className=\"card-action\">\r\n                                            <h6 className=\"the-title black-text align-center\">\r\n                                                {title.length >= 18 ? (title.slice(0, 18) + '...') : title}\r\n                                            </h6>\r\n                                            <p className=\"the-date\">{release_date}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </CategoryStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { allMoviesReducer } = state\r\n    //console.log('categories ', allMoviesReducer)\r\n    const theProps = ownProps.match.params.category\r\n\r\n    return {\r\n        categoryMovies: selectCategory(stateObjectToArray(allMoviesReducer), theProps)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedMovie })(withRouter(Collections))\r\n","import styled from 'styled-components'\r\n\r\nexport const MoviepageStyle = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n`\r\nexport const MovieDetailsStyle = styled.div`\r\n    width: 100%;\r\n    background-color: #757575;\r\n\r\n    .container{\r\n        width: 95%;\r\n        .row{\r\n            .movie-title{\r\n                padding: 3vw 0;\r\n                 \r\n            }\r\n            .col{\r\n\r\n                img{\r\n                    \r\n                }\r\n            }\r\n            .details{\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: space-around;\r\n                align-items: center;\r\n\r\n                .tagline{\r\n                    @media (max-width: 600px) {\r\n                        font-size: small;\r\n                        padding: 10px 0;\r\n                    }\r\n                }\r\n                .overview {\r\n                    @media (max-width: 600px) {\r\n                        font-size: smaller;\r\n                        padding: 10px 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const MovieTrailerStyle = styled.div`\r\n    width: 100%;\r\n    padding: 3vw 0;\r\n    \r\n    @media (max-width: 768px) {\r\n        \r\n    }\r\n\r\n`\r\n\r\nexport const ExtraDetails = styled.div`\r\n    width: 100%;\r\n    padding: 3vw 0;\r\n    background-color: #757575;\r\n\r\n    .detail-list{\r\n        width: 90%;\r\n        margin: 0 auto;\r\n        list-style: none;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        flex-wrap: wrap;\r\n        font-size: larger;\r\n\r\n        li{\r\n            @media (max-width: 768px) {\r\n                font-size: smaller;\r\n            }\r\n            span{\r\n                color: red;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const Trailer = styled.div`\r\n    width: 100%;\r\n    padding: 50px 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from 'react'\r\n\r\nconst MovieTrailer = ({ movieVideo }) => {\r\n    //console.log('trailer key = ', movieVideo)\r\n    return (\r\n        <div\r\n            className=\"video\"\r\n            style={{\r\n                position: \"relative\",\r\n                paddingBottom: \"56.25%\" /* 16:9 */,\r\n                paddingTop: 25,\r\n                height: 0,\r\n                width: '100%'\r\n            }}\r\n        >\r\n            <iframe\r\n                title={movieVideo.name}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n                src={`https://www.youtube.com/embed/${movieVideo.key}`}\r\n                frameBorder=\"0\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieTrailer\r\n\r\n// { movieVideo }\r\n// src={`https://www.youtube.com/watch?v=${movieVideo.key}`}\r\n//src={`https://www.youtube.com/embed/${trialKey}`}\r\n","import styled from 'styled-components'\r\n\r\nexport const PreLoaderStyle = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: center;\r\n    justify-content: center;\r\n    align-items: center;   \r\n`\r\n\r\nexport const SpinnerStyle = styled.div`\r\n        min-height: 80vh;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n`","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { SpinnerStyle, PreLoaderStyle } from './loaderStyle'\r\n\r\nexport const PreLoader = () => {\r\n    return (\r\n        <PreLoaderStyle>\r\n            <div className=\"preloader-wrapper small active\">\r\n                <div className=\"spinner-layer spinner-blue-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </PreLoaderStyle>\r\n    )\r\n}\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <SpinnerStyle>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <h3 className=\"sr-only\">Loading...</h3>\r\n            </Spinner>\r\n        </SpinnerStyle>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getFirstItem } from '../../utility-folder/utility'\r\nimport { MoviepageStyle, MovieDetailsStyle, MovieTrailerStyle, ExtraDetails, Trailer } from './moviePageStyle'\r\nimport MovieTrailer from './MovieTrailer'\r\nimport { PreLoader } from '../loader-file/Loader'\r\n\r\nconst MoviePage = ({ clickedMovies, movieVideo }) => {\r\n    //console.log('clicked movie ', clickedMovies)\r\n    const { budget, original_language, title, overview, poster_path, release_date, runtime, status, tagline, revenue, vote_average } = clickedMovies\r\n\r\n    return (\r\n        <MoviepageStyle >\r\n            <MovieDetailsStyle>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h5 className=\"movie-title deep-purple-text text-darken-4  center-align\">{title}</h5>\r\n                        <div className=\"col s12 l4 offset-l1\">\r\n                            <img src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt=\"poster\" className='image responsive-img' />\r\n                        </div>\r\n                        <div className=\"col s12 l6 offset-l1 details \">\r\n                            <p className=\"tagline yellow-text text-darken-3 flow-text \">{tagline}</p>\r\n                            <p className=\"overview white-text\">{overview}</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </MovieDetailsStyle>\r\n            <MovieTrailerStyle>\r\n                <div className=\"container\">\r\n                    <p className='flow-text center-align'> Movie Trailer </p>\r\n                    <Trailer >\r\n                        {\r\n                            movieVideo ?\r\n                                (<MovieTrailer movieVideo={movieVideo} />)\r\n\r\n                                : (\r\n                                    <PreLoader />\r\n                                )\r\n                        }\r\n                    </Trailer>\r\n                </div>\r\n            </MovieTrailerStyle>\r\n            <ExtraDetails>\r\n                <ul className=\"detail-list\">\r\n                    <li className=\"budget\">Budget: <span>${budget}</span></li>\r\n                    <li className=\"revenue\">Revenue: <span>${revenue}</span></li>\r\n                    <li className=\"release\">Released: <span>{release_date}</span></li>\r\n                    <li className=\"language\">Language: <span>{original_language}</span> </li>\r\n                    <li className=\"duration\">Duration: <span>{runtime}m</span> </li>\r\n                    <li className=\"status\">status: <span>{status}</span></li>\r\n                    <li className=\"votes\">Votes: <span>{vote_average}</span></li>\r\n                </ul>\r\n            </ExtraDetails>\r\n        </MoviepageStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ getMovie }) => {\r\n    //console.log('video state ', getMovie.video)\r\n    return {\r\n        clickedMovies: getMovie.movie,\r\n        movieVideo: getFirstItem(getMovie.video)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviePage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getSelectedMovie } from '../../redux/actions/moviesAction'\r\nimport { ResultStyle } from './SearchStyles'\r\n\r\nconst SearchResult = ({ searchedMovie, getSelectedMovie }) => {\r\n    //console.log('search array= ', searchedMovie)\r\n    return (\r\n        <ResultStyle>\r\n            <h4>Search Results</h4>\r\n            {\r\n                searchedMovie && searchedMovie.map(({ id, title, poster_path, release_date, overview }) => (\r\n\r\n                    <div className='result' onClick={() => getSelectedMovie(id)} key={id}>\r\n                        <Link to={`/movie/${id}/${title}`} className='image '>\r\n                            <img src={`https://image.tmdb.org/t/p/w154${poster_path}`} alt=\"search\" className='photo' />\r\n                        </Link>\r\n                        <div className=\"content \">\r\n                            <div className=\"search-title\">\r\n                                <Link to={`/movie/${id}/${title}`} className=\"title\" onClick={() => getSelectedMovie(id)}>\r\n                                    <p className='flow-text red-text text-accent-4'>{title} </p>\r\n                                </Link>\r\n                                <p className=\"date blue-text\">{release_date}</p>\r\n                            </div>\r\n                            <div className=\"search-overview\">\r\n                                <p className=\"overview\">\r\n                                    {\r\n                                        overview.length >= 250 ?\r\n                                            (overview.slice(0, 200) + '...')\r\n                                            : overview\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </ResultStyle>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ getMovie }) => {\r\n    //console.log('search state ', getMovie.searchedMovie)\r\n    return {\r\n        searchedMovie: getMovie.searchedMovie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedMovie })(SearchResult)\r\n\r\n//to={`/movie/${id}/${title}`}","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/home-Folder/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/nav-Folder/NavBar';\nimport Footer from './components/footer-folder/Footer';\nimport CategoryPage from './components/category-folder/CategoryPage';\nimport MoviePage from './components/movie-folder/MoviePage'\nimport { connect } from 'react-redux';\nimport { getMovies } from './redux/actions/moviesAction'\nimport SearchResult from './components/search-folder/SearchResult'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getMovies()\n    //console.log('app mounted')\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/search/:searchId' component={SearchResult} />\n            <Route exact path='/:category' component={CategoryPage} />\n            <Route path='/movie/:movieId' component={MoviePage} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { getMovies })(App);\n\n","import { GET_POPULAR, GET_TOP_RATED, GET_UPCOMING, GET_SELECTED_MOVIE, GET_VIDEO, GET_SEARCHED_MOVIE } from '../actions/moviesAction'\r\n\r\nexport const initState = {\r\n    popular_movies: {},\r\n    top_rated_movies: {},\r\n    upcoming_movies: {},\r\n\r\n}\r\n\r\nexport const movieState = {\r\n    movie: [],\r\n    video: [],\r\n    searchedMovie: []\r\n}\r\n\r\nexport const allMoviesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_POPULAR:\r\n            //console.log('popular= ', action.payload)\r\n            return {\r\n                ...state,\r\n                popular_movies: {\r\n                    ID: 1,\r\n                    category: 'Popular Movies',\r\n                    routeName: 'popular_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        case GET_TOP_RATED:\r\n            //console.log('top rated= ', action.payload)\r\n            return {\r\n                ...state,\r\n                top_rated_movies: {\r\n                    ID: 2,\r\n                    category: 'Top Rated Movies',\r\n                    routeName: 'top_rated_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        case GET_UPCOMING:\r\n            //console.log('upcoming= ', action.payload)\r\n            return {\r\n                ...state,\r\n                upcoming_movies: {\r\n                    ID: 3,\r\n                    category: 'Upcoming Movies',\r\n                    routeName: 'upcoming_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getMovie = (state = movieState, action) => {\r\n    switch (action.type) {\r\n        case GET_SELECTED_MOVIE:\r\n            //console.log('selected movie ', action.payload)\r\n            return {\r\n                ...state,\r\n                movie: action.payload\r\n            }\r\n\r\n        case GET_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n\r\n        case GET_SEARCHED_MOVIE:\r\n            return {\r\n                ...state,\r\n                searchedMovie: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { allMoviesReducer, getMovie } from './moviesReducer'\r\n//import { secondMoviesReducer } from './secondReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    allMoviesReducer,\r\n    getMovie,\r\n    //secondMoviesReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n//import logger from 'redux-logger'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport 'materialize-css/dist/css/materialize.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}