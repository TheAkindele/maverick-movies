{"version":3,"sources":["redux/actions/moviesAction.js","components/search-folder/SearchBox.js","components/headerFolder/Header.js","utility-folder/utility.js","components/Loader.js","components/preview-folder/MoviesPreview.js","components/home-Folder/Home.js","components/nav-Folder/NavBar.js","components/footer-folder/Footer.js","components/category-folder/CategoryPage.js","components/movie-folder/MoviePage.js","components/search-folder/SearchResult.js","App.js","redux/reducers/moviesReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["api_key","getSelectedMovie","movieId","dispatch","axios","then","res","type","payload","data","catch","err","console","log","vid","results","error","SearchBox","state","movieSearch","handleChange","e","setState","target","value","handleSubmit","props","history","match","preventDefault","getSearchedMovie","push","url","className","onSubmit","this","name","placeholder","onChange","Component","connect","sarchInput","result","withRouter","Header","stateObjectToArray","thestate","Object","keys","map","key","selectCategory","element","theProps","find","item","routeName","Loader","Spinner","animation","role","allMoviesReducer","allMoviesArr","length","ID","category","content","to","slice","id","poster_path","title","release_date","src","alt","Home","NavBar","isOpen","openMenu","onClick","Footer","ownProps","params","categoryMovies","theArray","getMovie","clickedMovies","movie","movieVideo","video","backdrop_path","budget","original_language","overview","runtime","status","tagline","revenue","production_companies","vote_average","backdrop","style","backgroundImage","width","height","controls","logo_path","origin_country","searchedMovie","App","getMovies","exact","path","component","SearchResult","CategoryPage","MoviePage","response","initState","popular_movies","top_rated_movies","upcoming_movies","movieState","rootReducer","combineReducers","action","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7892c78a.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const GET_POPULAR = 'GET_POPULAR'\r\nexport const GET_TOP_RATED = 'GET_TOP_RATED'\r\nexport const GET_UPCOMING = 'GET_UPCOMING'\r\nexport const GET_SELECTED_MOVIE = 'GET_SELECTED_MOVIE'\r\nexport const GET_VIDEO = 'GET_VIDEO'\r\nexport const GET_SEARCHED_MOVIE = 'GET_SEARCHED_MOVIE'\r\n\r\nconst api_key = '37ad0cf97af435a0a03c6e3da5f19502'\r\n\r\nexport const getMovies = () => dispatch => {\r\n    /// for popular\r\n    axios(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log('axios popular= ', response.data.results)\r\n            dispatch({\r\n                type: GET_POPULAR,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n\r\n    /// for toprated\r\n    axios(`https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log('axios topRated= ', response.data.results)\r\n            dispatch({\r\n                type: GET_TOP_RATED,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n\r\n    // for upcoming\r\n    axios(`https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(response => {\r\n            //console.log(' axios upcoming= ', response.data.results)\r\n            dispatch({\r\n                type: GET_UPCOMING,\r\n                payload: response.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error encountered ', err))\r\n}\r\n\r\nexport const getSelectedMovie = (movieId) => dispatch => {\r\n    axios(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}&language=en-US`)\r\n        .then(res => {\r\n            //console.log('the movie= ', res.data)\r\n            dispatch({\r\n                type: GET_SELECTED_MOVIE,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log('Error ', err))\r\n\r\n    axios(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${api_key}&language=en-US`)\r\n        .then(vid => {\r\n            //console.log('vid details ', vid.data.results)\r\n            dispatch({\r\n                type: GET_VIDEO,\r\n                payload: vid.data.results\r\n            })\r\n        })\r\n        .catch(error => console.log('Error encountered ', error))\r\n}\r\n\r\nexport const getSearchedMovie = sarchInput => dispatch => {\r\n    axios(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${sarchInput}`)\r\n        .then(result => {\r\n            //console.log('searched result= ', result.data.results)\r\n            dispatch({\r\n                type: GET_SEARCHED_MOVIE,\r\n                payload: result.data.results\r\n            })\r\n        })\r\n        .catch(err => console.log('Error in seraching ', err))\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getSearchedMovie } from '../../redux/actions/moviesAction'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass SearchBox extends Component {\r\n    state = {\r\n        movieSearch: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            movieSearch: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { movieSearch } = this.state\r\n        const { history, match } = this.props\r\n        e.preventDefault()\r\n        this.props.getSearchedMovie(movieSearch)\r\n        //console.log('search= ', movieSearch)\r\n        history.push(`${match.url}search/${movieSearch}`)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='search-box'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"search\" name='search' placeholder='search for a movie or TV show' onChange={this.handleChange} />\r\n                    <button className='btn-1'>Search</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { getSearchedMovie })(withRouter(SearchBox))\r\n","import React from 'react'\r\nimport SearchBox from '../search-folder/SearchBox'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"head-top\">\r\n                <p className=\"welcome\">Welcome</p>\r\n                <p className=\"others\">Millions of movies, TV shows and people to discover. Explore now</p>\r\n            </div>\r\n            <div className=\"search-bar\">\r\n                <SearchBox />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","\r\nexport const stateObjectToArray = (thestate) => {\r\n    return Object.keys(thestate).map(key => thestate[key])\r\n}\r\n\r\nexport const selectCategory = ((element, theProps) => {\r\n    if (element) {\r\n        return element.find(item => item.routeName === theProps)\r\n    }\r\n    else {\r\n        return console.log('element is empty')\r\n    }\r\n})\r\n\r\nexport const getFirstItem = (theArray) => {\r\n    if (theArray) {\r\n        return theArray.find(item => item.type === 'Trailer')\r\n    }\r\n    else return 'No video Found'\r\n}\r\n\r\n/*\r\nconst state = {\r\n    popular_movies: {\r\n        id: 1,\r\n        category: '',\r\n        routeName: '',\r\n        content: []\r\n    },\r\n    upcoming_movies: {\r\n        id: 1,\r\n        category: '',\r\n        routeName: '',\r\n        content: []\r\n    },\r\n    top_rated_movies: {\r\n        id: 1,\r\n        category: '',\r\n        routeName: '',\r\n        content: []\r\n    }\r\n}\r\n*/\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { stateObjectToArray } from '../../utility-folder/utility'\r\nimport Loader from '../Loader'\r\n\r\nconst MoviesPreview = ({ allMoviesArr }) => {\r\n\r\n    return (\r\n        <div className='preview-box'>\r\n            {\r\n                allMoviesArr.length > 0 ?\r\n                    (\r\n                        allMoviesArr.map(({ ID, routeName, category, content }) => (\r\n                            <div className=\"the-previews\" key={ID}>\r\n                                <div className=\"category\" >\r\n                                    <Link to={`/${routeName}`} className='topic'> {category} </Link>\r\n                                </div>\r\n                                <div className=\"previews\">\r\n                                    {\r\n                                        content && content.slice(0, 5).map(({ id, poster_path, title, release_date }) => (\r\n                                            <Link to={`/${routeName}`} className=\"card\" key={id}>\r\n\r\n                                                <div className=\"image\">\r\n                                                    <img src={`https://image.tmdb.org/t/p/w185${poster_path}`} alt=\"poster\" />\r\n                                                </div>\r\n                                                <div className=\"card-foot\">\r\n                                                    <div className=\"title\">\r\n                                                        {title}\r\n                                                    </div>\r\n                                                    <div className=\"date\">{release_date}</div>\r\n                                                </div>\r\n\r\n                                            </Link>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )\r\n                    : (\r\n                        <Loader />\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ allMoviesReducer }) => {\r\n    //console.log('preview array ', stateObjectToArray(allMoviesReducer))\r\n\r\n    return {\r\n        allMoviesArr: stateObjectToArray(allMoviesReducer)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MoviesPreview))\r\n","import React from 'react'\r\nimport Header from '../headerFolder/Header'\r\nimport MoviesPreview from '../preview-folder/MoviesPreview'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='homepage'>\r\n            <Header />\r\n            <MoviesPreview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaChevronDown, FaBars } from 'react-icons/fa'\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    openMenu = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n        //console.log('state= ', this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar'>\r\n                <Link to='/' className=\"logo\">\r\n                    maverickMOVIES\r\n            </Link>\r\n                <div className=\"nav-menu\">\r\n                    <div className=\"home nav-bar\">\r\n                        <Link to='/' className='link'>HOME</Link>\r\n                    </div>\r\n                    <div className=\"dropdown nav-bar\">\r\n                        <div className=\"dropdown-btn link\">\r\n                            MOVIES\r\n                        <FaChevronDown />\r\n                        </div>\r\n                        <div className=\"dropdown-content\">\r\n                            <Link to='/popular_movies' className='content'>Popular</Link>\r\n                            <Link to='/top_rated_movies' className='content'>Top-Rated</Link>\r\n                            <Link to='/upcoming_movies' className='content'>Upcoming</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className='nav-bar'>\r\n                        <Link to='/spin' className='link'>SignIn</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"nav-icon\" onClick={this.openMenu}><h2><FaBars /></h2></div>\r\n\r\n                <div className={this.state.isOpen ? 'open' : 'closed'}>\r\n                    <h4><Link to='/'>HOME</Link></h4>\r\n                    <h4><Link to='/popular_movies'>Popular Movies</Link></h4>\r\n                    <h4><Link to='/top_rated_movies'>Top-Rated Movies</Link></h4>\r\n                    <h4><Link to='/upcoming_movies'>Upcoming Movies</Link></h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className=\"footer-logo\">\r\n                <Link to='/' className=\"foot-logo\">\r\n                    maverickMOVIES\r\n            </Link>\r\n            </div>\r\n            <div className=\"phone\">\r\n                <p>08123456789</p>\r\n                <p>07123456789</p>\r\n                <p>06012345678</p>\r\n            </div>\r\n            <div className=\"contact\">\r\n                <p>Our address</p>\r\n                <p>1, Aso drive, asokoro, aso rock, Abuja</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { stateObjectToArray, selectCategory } from '../../utility-folder/utility'\r\nimport { getSelectedMovie } from '../../redux/actions/moviesAction'\r\n\r\nconst Collections = ({ categoryMovies, getSelectedMovie }) => {\r\n    const { category, content } = categoryMovies\r\n\r\n    return (\r\n        <div className='category-box'>\r\n            <div className=\"category-name\">\r\n                {category}\r\n            </div>\r\n            <div className=\"category-grid\">\r\n                {\r\n                    content.map(({ id, poster_path, title, release_date }) => (\r\n                        <div className=\"category-card\" key={id} onClick={() => getSelectedMovie(id)}>\r\n                            <Link to={`/movie/${id}/${title}`} className='link'>\r\n                                <div className=\"image\">\r\n                                    <img src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt=\"poster\" />\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <div className=\"the-title\">\r\n                                        {title}\r\n                                    </div>\r\n                                    <div className=\"the-date\">{release_date}</div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { allMoviesReducer } = state\r\n    const theProps = ownProps.match.params.category\r\n\r\n    return {\r\n        categoryMovies: selectCategory(stateObjectToArray(allMoviesReducer), theProps)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedMovie })(withRouter(Collections))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getFirstItem } from '../../utility-folder/utility'\r\nimport ReactPlayer from 'react-player'\r\nimport Loader from '../Loader'\r\n\r\nconst MoviePage = ({ clickedMovies, movieVideo }) => {\r\n    const { backdrop_path, budget, original_language, title, overview, poster_path, release_date, runtime, status, tagline, revenue, production_companies, vote_average } = clickedMovies\r\n    const backdrop = `https://image.tmdb.org/t/p/w1280${backdrop_path}`\r\n\r\n    return (\r\n        <div className='movie-page' >\r\n            <div className=\"backdrop\" style={{ backgroundImage: `url(${backdrop})` }}>\r\n                <div className='top'>\r\n                    <div className=\"poster\">\r\n                        <img src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt=\"poster\" className='poster-img' />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className=\"movie-title\">{title}</div>\r\n                        <ul className=\"detail-list\">\r\n                            <li className=\"release\">Released: <span>{release_date}</span></li>\r\n                            <li className=\"language\">Language: <span>{original_language}</span> </li>\r\n                            <li className=\"duration\">Duration: <span>{runtime}m</span> </li>\r\n                            <li className=\"status\">status: <span>{status}</span></li>\r\n                            <li className=\"votes\">Votes: <span>{vote_average}</span></li>\r\n                        </ul>\r\n                        <div className=\"about\">\r\n                            <div className=\"tagline\">{tagline}</div>\r\n                            <div className=\"overview\">{overview}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"trailer-box\">\r\n                <p>See Movie Trailer Here</p>\r\n                <div className=\"video\">\r\n                    {\r\n                        movieVideo ?\r\n                            (<div className='player-wrapper'>\r\n                                <ReactPlayer\r\n                                    className='react-player'\r\n                                    url={`https://www.youtube.com/watch?v=${movieVideo.key}`}\r\n                                    width='100%'\r\n                                    height='100%'\r\n                                    controls={true}\r\n                                />\r\n                            </div>)\r\n\r\n                            : <Loader />\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"expenses\">\r\n                    <div className=\"budget\">Budget: ${budget}</div>\r\n                    <div className=\"revenue\">Revenue: ${revenue}</div>\r\n                </div>\r\n                <div className=\"companies\">\r\n                    <h2>produced by</h2>\r\n                    {\r\n                        production_companies && production_companies.map(({ id, logo_path, name, origin_country }) => (\r\n                            <div className=\"company\" key={id}>\r\n                                <div className=\"logo\">\r\n                                    <img src={`https://image.tmdb.org/t/p/w92${logo_path}`} alt=\"logo\" />\r\n                                </div>\r\n                                <div className=\"company-info\">\r\n                                    <div className=\"the-name\"> {name}</div>\r\n                                    <div className=\"location\"> {origin_country}</div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ getMovie }) => {\r\n    //console.log('video state ', getMovie.video)\r\n    return {\r\n        clickedMovies: getMovie.movie,\r\n        movieVideo: getFirstItem(getMovie.video)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MoviePage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getSelectedMovie } from '../../redux/actions/moviesAction'\r\n\r\nconst SearchResult = ({ searchedMovie, getSelectedMovie }) => {\r\n    //console.log('search array= ', searchedMovie)\r\n    return (\r\n        <div className='result-container'>\r\n            <h1>Search Results</h1>\r\n            <div className=\"result-box\">\r\n                {\r\n                    searchedMovie && searchedMovie.map(({ id, title, poster_path, release_date, overview }) => (\r\n                        <div className=\"result\" key={id}>\r\n                            <div className=\"search-poster\" onClick={() => getSelectedMovie(id)}>\r\n                                <Link to={`/movie/${id}/${title}`} className='link'>\r\n                                    <img src={`https://image.tmdb.org/t/p/w92${poster_path}`} alt=\"searched result\" />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"search-details\">\r\n                                <div className=\"search-title\">\r\n                                    <div className=\"title\" onClick={() => getSelectedMovie(id)}>\r\n                                        <Link to={`/movie/${id}/${title}`} className='link'>{title} </Link>\r\n                                    </div>\r\n                                    <div className=\"date\">{release_date}</div>\r\n                                </div>\r\n                                <div className=\"search-overview\">\r\n                                    <p className=\"overview\">{\r\n                                        overview.length >= 250 ?\r\n                                            (overview.slice(0, 200) + '...')\r\n                                            : overview\r\n                                    }</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ getMovie }) => {\r\n    //console.log('search state ', getMovie.searchedMovie)\r\n    return {\r\n        searchedMovie: getMovie.searchedMovie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSelectedMovie })(SearchResult)\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Home from './components/home-Folder/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/nav-Folder/NavBar';\nimport Footer from './components/footer-folder/Footer';\nimport CategoryPage from './components/category-folder/CategoryPage';\nimport MoviePage from './components/movie-folder/MoviePage'\nimport { connect } from 'react-redux';\nimport { getMovies } from './redux/actions/moviesAction'\nimport SearchResult from './components/search-folder/SearchResult'\nimport Loader from './components/Loader';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getMovies()\n    //console.log('app mounted')\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/spin' component={Loader} />\n            <Route path='/search/:searchId' component={SearchResult} />\n            <Route exact path='/:category' component={CategoryPage} />\n            <Route path='/movie/:movieId' component={MoviePage} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { getMovies })(App);\n\n","import { GET_POPULAR, GET_TOP_RATED, GET_UPCOMING, GET_SELECTED_MOVIE, GET_VIDEO, GET_SEARCHED_MOVIE } from '../actions/moviesAction'\r\n\r\nexport const initState = {\r\n    popular_movies: {},\r\n    top_rated_movies: {},\r\n    upcoming_movies: {},\r\n}\r\n\r\nexport const movieState = {\r\n    movie: [],\r\n    video: [],\r\n    searchedMovie: []\r\n}\r\n\r\nexport const allMoviesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_POPULAR:\r\n            //console.log('popular= ', action.payload)\r\n            return {\r\n                ...state,\r\n                popular_movies: {\r\n                    ID: 1,\r\n                    category: 'Popular Movies',\r\n                    routeName: 'popular_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        case GET_TOP_RATED:\r\n            //console.log('top rated= ', action.payload)\r\n            return {\r\n                ...state,\r\n                top_rated_movies: {\r\n                    ID: 2,\r\n                    category: 'Top Rated Movies',\r\n                    routeName: 'top_rated_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        case GET_UPCOMING:\r\n            //console.log('upcoming= ', action.payload)\r\n            return {\r\n                ...state,\r\n                upcoming_movies: {\r\n                    ID: 3,\r\n                    category: 'Upcoming Movies',\r\n                    routeName: 'upcoming_movies',\r\n                    content: action.payload\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getMovie = (state = movieState, action) => {\r\n    switch (action.type) {\r\n        case GET_SELECTED_MOVIE:\r\n            //console.log('selected movie ', action.payload)\r\n            return {\r\n                ...state,\r\n                movie: action.payload\r\n            }\r\n\r\n        case GET_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n\r\n        case GET_SEARCHED_MOVIE:\r\n            return {\r\n                ...state,\r\n                searchedMovie: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { allMoviesReducer, getMovie } from './moviesReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    allMoviesReducer,\r\n    getMovie\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n//import logger from 'redux-logger'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport default store\r\n\r\n// https://image.tmdb.org/t/p/w154/1Duc3EBiegywczxTWekvy03HWai.jpg\r\n\r\n// https://api.themoviedb.org/3/configuration?api_key=37ad0cf97af435a0a03c6e3da5f19502\r\n\r\n// imageURL = `https://image.tmdb.org/t/p/${poster_path}`\r\n\r\n// video =  https://api.themoviedb.org/3/movie/297762/videos?api_key=###&language=en-US","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}